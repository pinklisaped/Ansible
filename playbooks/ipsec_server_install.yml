---
- name: IPSec server install with Let`s Encrypt certificate
  hosts: all
  become: true
  roles:
    - ipsec_server
    - lets_encrypt
  pre_tasks:
    - name: Ufw allow app ssh
      community.general.ufw:
        rule: allow
        name: OpenSSH
        comment: OpenSSH allow app
      tags:
        - firewall

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
      when: ansible_os_family | lower == 'debian'
      tags:
        - install_packages
  post_tasks:
    - name: Copy certs
      ansible.builtin.copy:
        remote_src: true
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: '0500'
      loop:
        - { src: "{{ lets_encrypt_certs_dir }}/chain.crt", dest: /etc/ipsec.d/cacerts/ca.crt }
        - { src: "{{ lets_encrypt_certs_dir }}/fullchain.pem", dest: /etc/ipsec.d/certs/fullchain.pem }
        - { src: "{{ lets_encrypt_key_path }}", dest: /etc/ipsec.d/private/server-key.pem }
      notify:
        - Restart ipsec

    - name: Update file letsencrypt_renew.sh
      ansible.builtin.blockinfile:
        path: "{{ lets_encrypt_dir }}/letsencrypt_renew.sh"
        block: |
          cp {{ lets_encrypt_certs_dir }}/fullchain.pem /etc/ipsec.d/certs/fullchain.pem
          cp {{ lets_encrypt_certs_dir }}/chain.crt /etc/ipsec.d/cacerts/ca.crt
          ipsec rereadall
        marker: "# {mark} ANSIBLE MANAGED BLOCK IPSEC"
  handlers:
    - name: Restart ipsec
      ansible.builtin.systemd_service:
        name: strongswan-starter
        state: restarted
  vars:
    domain_name: # press domain here
    lets_encrypt_acme_email: # press email here
    ipsec_server_leftid: '"CN={{ domain_name }}"'
    lets_encrypt_dir: /etc/letsencrypt
    lets_encrypt_certs_dir: "{{ lets_encrypt_dir }}/live/{{ domain_name }}"
    lets_encrypt_key_path: "{{ lets_encrypt_dir }}/keys/{{ domain_name }}.key"
